#+title: Test that invoked the =do= method without any failure
#+AUTHOR: VLEAD
#+DATE: [2017-04-11 Tue]
#+SETUPFILE: ../../../../../org-templates/level-5.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Test
  =TestDelUser= object holds an instance of the =DelUser= component against the
  field =component=.  This test invokes the =do= method on the component.

** Imports
#+BEGIN_SRC python :tangle test_del_non_existent_user.py
import unittest
from runtime.objects.session.session import Session
from runtime.components.engine.del_user.tests.harness import TestHarness
from runtime.datatypes.cmd.cmd import Cmd

#+END_SRC


** Test Case

   Imports the TestHarness which sets up the component.  This test creates an
   instruction with cmd =del_user= and an existing session.  The engine's do
   method fails since a non existent user is deleted.

#+BEGIN_SRC python :tangle test_del_non_existent_user.py
class TestDoPasses(TestHarness):

    def test_do_passes(self):
        print "test_do_passes"
        session = self.session
        self.component.em.delete_user(self.d_user)
        instr = {'cmd': Cmd.del_user, 
                 'session': session, 
                 'data': {'user': self.d_user}}
        engine = self.component
        with self.assertRaises(Exception):
            engine.do(instr)

#+END_SRC

